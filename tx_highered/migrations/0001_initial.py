# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-01-22 01:01
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('number_of_applicants', models.IntegerField(blank=True, null=True)),
                ('number_admitted', models.IntegerField(blank=True, null=True)),
                ('number_admitted_who_enrolled', models.IntegerField(blank=True, null=True)),
                ('percent_of_applicants_admitted', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='%admitted')),
                ('percent_of_admitted_who_enrolled', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='%admitted who enrolled')),
                ('percent_top10rule', models.DecimalField(decimal_places=1, max_digits=4, null=True, verbose_name=b'First-Time Students in Top 10%')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
                'get_latest_by': 'year',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('total', models.IntegerField(null=True)),
                ('fulltime_equivalent', models.IntegerField(null=True, verbose_name=b'Full-time Equivalent')),
                ('fulltime', models.IntegerField(null=True, verbose_name=b'Full-time')),
                ('parttime', models.IntegerField(null=True, verbose_name=b'Part-time')),
                ('total_percent_white', models.IntegerField(null=True, verbose_name=b'% White')),
                ('total_percent_black', models.IntegerField(null=True, verbose_name=b'% Black')),
                ('total_percent_hispanic', models.IntegerField(null=True, verbose_name=b'% Hispanic')),
                ('total_percent_native', models.IntegerField(null=True, verbose_name=b'% Native Am.')),
                ('total_percent_asian', models.IntegerField(null=True, verbose_name=b'% Asian')),
                ('total_percent_unknown', models.IntegerField(null=True, verbose_name=b'% N/A')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
            },
            managers=[
                ('institution_values', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='GraduationRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('bachelor_4yr', models.IntegerField(null=True, verbose_name='Bachelor degree within four years')),
                ('bachelor_5yr', models.IntegerField(null=True, verbose_name='Bachelor degree within five years')),
                ('bachelor_6yr', models.IntegerField(null=True, verbose_name='Bachelor degree within six years')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('wikipedia_title', models.CharField(blank=True, max_length=100, null=True)),
                ('wikipedia_abstract', models.TextField(blank=True, null=True)),
                ('wikipedia_seal', models.ImageField(blank=True, null=True, upload_to=b'tx_highered/seals')),
                ('wikipedia_logo', models.ImageField(blank=True, null=True, upload_to=b'tx_highered/logos')),
                ('wikipedia_scraped', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('is_private', models.BooleanField(default=False)),
                ('institution_type', models.CharField(blank=True, choices=[(b'uni', b'University'), (b'med', b'Health-Related Institutions'), (b'pub_cc', b'Community College'), (b'pub_tech', b'Technical College System'), (b'pub_state', b'State Colleges'), (b'pri_jr', b'Junior College'), (b'pri_chi', b'Chiropractic Institution')], max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ipeds_id', models.IntegerField(blank=True, null=True)),
                ('fice_id', models.IntegerField(blank=True, null=True)),
                ('ope_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PriceTrends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('tuition_fees_in_state', models.IntegerField(null=True, verbose_name='In-State Tuition & Fees')),
                ('tuition_fees_outof_state', models.IntegerField(null=True, verbose_name='Out-Of-State Tuition & Fees')),
                ('books_and_supplies', models.IntegerField(null=True, verbose_name='Books & Supplies')),
                ('room_and_board_on_campus', models.IntegerField(null=True)),
                ('room_and_board_off_campus', models.IntegerField(null=True)),
                ('room_and_board_off_campus_w_family', models.IntegerField(null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricetrends', to='tx_highered.Institution')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicAdmissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('number_of_applicants', models.IntegerField(blank=True, null=True)),
                ('number_admitted', models.IntegerField(blank=True, null=True)),
                ('number_admitted_who_enrolled', models.IntegerField(blank=True, null=True)),
                ('percent_of_applicants_admitted', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='%admitted')),
                ('percent_of_admitted_who_enrolled', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='%admitted who enrolled')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publicadmissions', to='tx_highered.Institution')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
                'get_latest_by': 'year',
            },
        ),
        migrations.CreateModel(
            name='PublicEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('total', models.IntegerField(help_text=b'Total full-time students', null=True)),
                ('african_american_count', models.IntegerField(null=True)),
                ('asian_count', models.IntegerField(null=True)),
                ('hispanic_count', models.IntegerField(null=True)),
                ('international_count', models.IntegerField(null=True)),
                ('multiracial_count', models.IntegerField(null=True)),
                ('native_american_count', models.IntegerField(null=True)),
                ('pacific_islander_count', models.IntegerField(null=True)),
                ('unknown_count', models.IntegerField(null=True)),
                ('white_count', models.IntegerField(null=True)),
                ('african_american_percent', models.FloatField(null=True, verbose_name=b'% Black')),
                ('asian_percent', models.FloatField(null=True, verbose_name=b'% Asian')),
                ('hispanic_percent', models.FloatField(null=True, verbose_name=b'% Hispanic')),
                ('international_percent', models.FloatField(null=True, verbose_name=b'% International')),
                ('multiracial_percent', models.FloatField(null=True, verbose_name=b'% Multiracial')),
                ('native_american_percent', models.FloatField(null=True, verbose_name=b'% Native Am.')),
                ('pacific_islander_percent', models.FloatField(null=True, verbose_name=b'% Pacific Islander')),
                ('unknown_percent', models.FloatField(null=True, verbose_name=b'% Unknown')),
                ('white_percent', models.FloatField(null=True, verbose_name=b'% White')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publicenrollment', to='tx_highered.Institution')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
            },
            managers=[
                ('institution_values', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PublicGraduationRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('associate_3yr', models.DecimalField(decimal_places=2, help_text='Only available for community colleges', max_digits=5, null=True, verbose_name='Associate degree within three years')),
                ('associate_4yr', models.DecimalField(decimal_places=2, help_text='Only available for community colleges', max_digits=5, null=True, verbose_name='Associate degree within four years')),
                ('associate_6yr', models.DecimalField(decimal_places=2, help_text='Only available for community colleges', max_digits=5, null=True, verbose_name='Associate degree within six years')),
                ('bachelor_3yr', models.DecimalField(decimal_places=2, help_text='Only available for community colleges', max_digits=5, null=True, verbose_name='Bachelor degree within three years')),
                ('bachelor_4yr', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Bachelor degree within four years')),
                ('bachelor_5yr', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Bachelor degree within five years')),
                ('bachelor_6yr', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Bachelor degree within six years')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publicgraduationrates', to='tx_highered.Institution')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(max_length=60, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=1970, verbose_name='Year')),
                ('year_type', models.CharField(choices=[(b'academic', b'Academic'), (b'calendar', b'Calendar'), (b'fall', b'Fall'), (b'fiscal', b'FY'), (b'aug', b'August 31st')], max_length=10, null=True)),
                ('sat_verbal_25th_percentile', models.IntegerField(null=True)),
                ('sat_verbal_75th_percentile', models.IntegerField(null=True)),
                ('sat_math_25th_percentile', models.IntegerField(null=True)),
                ('sat_math_75th_percentile', models.IntegerField(null=True)),
                ('sat_writing_25th_percentile', models.IntegerField(null=True)),
                ('sat_writing_75th_percentile', models.IntegerField(null=True)),
                ('sat_submitted_number', models.IntegerField(null=True)),
                ('sat_submitted_percent', models.IntegerField(null=True)),
                ('act_composite_25th_percentile', models.IntegerField(null=True)),
                ('act_composite_75th_percentile', models.IntegerField(null=True)),
                ('act_english_25th_percentile', models.IntegerField(null=True)),
                ('act_english_75th_percentile', models.IntegerField(null=True)),
                ('act_math_25th_percentile', models.IntegerField(null=True)),
                ('act_math_75th_percentile', models.IntegerField(null=True)),
                ('act_writing_25th_percentile', models.IntegerField(null=True)),
                ('act_writing_75th_percentile', models.IntegerField(null=True)),
                ('act_submitted_number', models.IntegerField(null=True)),
                ('act_submitted_percent', models.IntegerField(null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testscores', to='tx_highered.Institution')),
            ],
            options={
                'ordering': ['year'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='institution',
            name='system',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tx_highered.System'),
        ),
        migrations.AddField(
            model_name='graduationrates',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graduationrates', to='tx_highered.Institution'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment', to='tx_highered.Institution'),
        ),
        migrations.AddField(
            model_name='admissions',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admissions', to='tx_highered.Institution'),
        ),
        migrations.AlterUniqueTogether(
            name='testscores',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='publicgraduationrates',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='publicenrollment',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='publicadmissions',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='pricetrends',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='graduationrates',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together=set([('year', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='admissions',
            unique_together=set([('year', 'institution')]),
        ),
    ]
